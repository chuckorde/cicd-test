.install_common_tools: &install_common_tools |
    apt-get update -yqq
    apt-get -qy install ssh git > /dev/null

.create_veracode_credentials: &create_veracode_credentials |
    mkdir ~/.veracode
    cat <<EOF> ~/.veracode/credentials
    [DEFAULT]
    VERACODE_API_ID = ${VERACODE_API_ID}
    VERACODE_API_SECRET = ${VERACODE_API_SECRET}
    EOF

.configiure_ssh_keys: &configiure_ssh_keys |
    export DOMAIN=$(echo ${GIT_PROJECT_URL} | cut -d\@ -f2 | cut -d\: -f1)
    umask 077
    mkdir -p ~/.ssh
    echo "${SSH_PRIVATE_KEY}" > ~/.ssh/id_rsa
    ssh-keyscan -H $DOMAIN > ~/.ssh/known_hosts
    eval $(ssh-agent -s)
    ssh-add ~/.ssh/id_rsa
    # ssh -T git@$DOMAIN



variables:
    GIT_STRATEGY: clone

stages:
    - test
    - package
    - deploy

run unit tests:
    stage: test
    tags:
        - test_runner

    script:
        - *install_common_tools
        - *create_veracode_credentials

        - export SSH_PRIVATE_KEY=${GITLAB_SSH_PRIVATE_KEY}
        - export GIT_USER_NAME="chuck"
        - export GIT_USER_EMAIL="chuck@gitlab.mothership"
        - export GIT_PROJECT_URL="git@gitlab.mothership:chuck/cicd-test.git"
        - *configiure_ssh_keys
          
        - git config user.name  ${GIT_USER_LOGIN}
        - git config user.email ${GIT_USER_EMAIL}
        - git remote rm origin
        - git remote add origin ${GIT_PROJECT_URL}


        - git checkout master
        - echo 0.0.1 > VERSION.txt
        - git commit -am 'Test [skip ci]'
        - git push origin master
