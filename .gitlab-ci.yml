.install_common_tools: &install_common_tools |
    apt-get update -yqq
    apt-get -qy install ssh git > /dev/null

.create_veracode_credentials: &create_veracode_credentials |
    mkdir ~/.veracode
    cat <<EOF> ~/.veracode/credentials
    [DEFAULT]
    VERACODE_API_ID = ${VERACODE_API_ID}
    VERACODE_API_SECRET = ${VERACODE_API_SECRET}
    EOF

.configiure_git_repo: &configiure_git_repo |
    export GIT_PROJECT_URL=\
    "git@${GIT_HOST}:${GIT_USER_NAME}/${CI_PROJECT_NAME}.git"
    export DOMAIN=$(echo ${GIT_PROJECT_URL} | cut -d\@ -f2 | cut -d\: -f1)
    umask 077
    mkdir -p ~/.ssh
    echo "${SSH_PRIVATE_KEY}" > ~/.ssh/id_rsa
    ssh-keyscan -H $DOMAIN > ~/.ssh/known_hosts
    eval $(ssh-agent -s)
    ssh-add ~/.ssh/id_rsa

    git config user.name  ${GIT_USER_NAME}
    git config user.email ${GIT_USER_EMAIL}
    git remote rm origin
    git remote add origin ${GIT_PROJECT_URL}

.increment_semantic_version: &increment_semantic_version |
    set -x
    INIT_FILE=$(find . -maxdepth 2 -name "__init__.py")
    [ -z $INIT_FILE ] && { echo "Can't find <module>.__init__.py" ; exit 1; }

    VERSION=$(awk '/([0-9]+\.[0-9]+\.[0-9])/ {print $3}' $INIT_FILE)
    MAJOR=$(echo $VERSION | cut -d\. -f1)
    MINOR=$(echo $VERSION | cut -d\. -f2)
    PATCH=$(echo $VERSION | cut -d\. -f3)

    COMMIT_TYPE=$(git log -1 --pretty=format:%B | cut -d\: -f1)
    case $COMMIT_TYPE in
        PATCH) PATCH=$((PATCH + 1)) ;;
        MINOR) MINOR=$((MINOR + 1)) ; PATCH=0 ;;
        MAJOR) MAJOR=$((MAJOR + 1)) ; PATCH=0 ; MINOR=0 ;;
        *) echo "Cannot increment version from commit"; exit 1 ;;
    esac
    export VERSION=${MAJOR}.${MINOR}.${PATCH}

    if grep -q "__version__" $INIT_FILE; then
        sed -ri "s/([0-9]+\.[0-9]+\.[0-9])/${VERSION}/" $INIT_FILE
    else echo "__version__ = ${VERSION}" >> $INIT_FILE
    fi
    set +x
 
variables:
    GIT_STRATEGY: clone

stages:
    - test
    - package
    - deploy

run unit tests:
    stage: test
    tags:
        - test_runner

    script:
        - export GIT_USER_NAME="chuck"
        - export GIT_USER_EMAIL="chuck@gitlab.mothership"
        - export GIT_HOST="gitlab.mothership"
        - export SSH_PRIVATE_KEY=${GITLAB_SSH_PRIVATE_KEY}

        - *install_common_tools
        - *create_veracode_credentials
        - *configiure_git_repo

        - git checkout master
        - *increment_semantic_version
        - git add .
        - git commit -m 'Test [skip ci]'
        - git push origin master

        - export GIT_USER_NAME="chuckorde"
        - export GIT_USER_EMAIL="chuckorde@gmail.com"
        - export GIT_HOST="github.com"
        - export SSH_PRIVATE_KEY=${GITHUB_SSH_PRIVATE_KEY}
        - *configiure_git_repo
        - git push -u origin master

